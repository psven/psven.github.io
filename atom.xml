<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Sven&#39;s Blog</title>
  
  <subtitle>Long long journey.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-31T07:25:41.339Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Sven</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://yoursite.com/2018/07/31/%E6%B5%85%E6%8B%B7%E8%B4%9D%E4%B8%8E%E6%B7%B1%E6%8B%B7%E8%B4%9D/"/>
    <id>http://yoursite.com/2018/07/31/浅拷贝与深拷贝/</id>
    <published>2018-07-31T07:23:16.658Z</published>
    <updated>2018-07-31T07:25:41.339Z</updated>
    
    <content type="html"><![CDATA[<hr><p>title: 浅拷贝与深拷贝<br>date: 2018-07-28 10:04:56<br>tags:</p><ul><li>Objective-C</li></ul><hr><p>本文内容基本都是通用的知识点，这里只是作为个人知识点的一个整理归纳，所以没有进行非常详细的讲解。</p><h1 id="浅拷贝与深拷贝"><a href="#浅拷贝与深拷贝" class="headerlink" title="浅拷贝与深拷贝"></a>浅拷贝与深拷贝</h1><p><img src="https://lh3.googleusercontent.com/-4UwIUm4Trjo/W15xw66sm7I/AAAAAAAAADA/ZlzvYYKtrXQPuBvT9A2J0_pWp9YkILwYgCHMYCw/I/15329161608785.png" alt=""><br>参考苹果文档中的图片示例可以看出，对集合对象 Array1 进行 copy，无论是浅拷贝还是深拷贝，都会复制出一份新的对象 Array2，不同之处在于：</p><ul><li>浅拷贝操作中 Array1 与 Array2 内各个元素的指针指向的还是那个对象</li><li>深拷贝中 Array1 与 Array2 内元素指针指向的是各自的对象</li></ul><h1 id="copy-与-mutableCopy"><a href="#copy-与-mutableCopy" class="headerlink" title="copy 与 mutableCopy"></a>copy 与 mutableCopy</h1><p>下面通过代码及输出信息来查看 <code>copy</code> 与 <code>mutableCopy</code> 的作用。</p><p>对<strong>不可变对象</strong>进行 <code>copy</code> 与 <code>mutableCopy</code>:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSString</span> *string = <span class="string">@"String"</span>;</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"string -&gt; %p"</span>, string);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *copyString = [string <span class="keyword">copy</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"copyString -&gt; %p"</span>, copyString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *mutableCopyString = [string mutableCopy];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mutableCopyString -&gt; %p"</span>, mutableCopyString);</span><br></pre></td></tr></table></figure><p>打印： </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">string -&gt; <span class="number">0x10e5ad110</span> </span><br><span class="line">copyString -&gt; <span class="number">0x10e5ad110</span></span><br><span class="line">mutableCopyString -&gt; <span class="number">0x604000444ad0</span></span><br></pre></td></tr></table></figure><p>对<strong>可变对象</strong>进行 <code>copy</code> 与 <code>mutableCopy</code>:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableString</span> *mString = [<span class="built_in">NSMutableString</span> stringWithFormat:<span class="string">@"mutable String"</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mString -&gt; %p"</span>, mString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSString</span> *copyMutableString = [mString <span class="keyword">copy</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"copyMutableString -&gt; %p"</span>, copyMutableString);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableString</span> *mutableCopyMutableString = [mString mutableCopy];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mutableCopyMutableString -&gt; %p"</span>, mutableCopyMutableString);</span><br></pre></td></tr></table></figure><p>打印： </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mString -&gt; <span class="number">0x600000255f60</span></span><br><span class="line">copyMutableString -&gt; <span class="number">0x6040000280e0</span></span><br><span class="line">mutableCopyMutableString -&gt; <span class="number">0x600000256110</span></span><br></pre></td></tr></table></figure><p>由此可见：</p><table><thead><tr><th></th><th>不可变对象</th><th>可变对象</th></tr></thead><tbody><tr><td>copy</td><td>无操作</td><td>深拷贝</td></tr><tr><td>mutableCopy</td><td>深拷贝</td><td>深拷贝</td></tr></tbody></table><p>不可变对象 <code>copy</code>: 不做任何拷贝操作，新建指针的值依旧是同一个指针的值</p><p>对<strong>不可变集合对象</strong>进行 <code>copy</code> 与 <code>mutableCopy</code>:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSArray</span> *array = @[<span class="string">@"a"</span>, <span class="string">@"b"</span>, <span class="string">@"c"</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"array -&gt; %p, %p, %p"</span>, array, array[<span class="number">0</span>], array[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *copyArray = [array <span class="keyword">copy</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"copyArray -&gt; %p, %p, %p"</span>, copyArray, copyArray[<span class="number">0</span>], copyArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableArray</span> *mutableCopyArray = [array mutableCopy];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mutableCopyArray -&gt; %p, %p, %p"</span>, mutableCopyArray, mutableCopyArray[<span class="number">0</span>], mutableCopyArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *methodArray = [<span class="built_in">NSArray</span> arrayWithArray:array];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"-arrayWithArray: -&gt; %p, %p, %p"</span>, methodArray, methodArray[<span class="number">0</span>], methodArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *copyItemsArray = [[<span class="built_in">NSArray</span> alloc] initWithArray:array copyItems:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"-initWithArray:copyItems: -&gt; %p, %p, %p"</span>, copyItemsArray, copyItemsArray[<span class="number">0</span>], copyItemsArray[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>打印： </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">array -&gt; <span class="number">0x6080002436f0</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br><span class="line">copyArray -&gt; <span class="number">0x6080002436f0</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br><span class="line">mutableCopyArray -&gt; <span class="number">0x600000256140</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br><span class="line">-arrayWithArray: -&gt; <span class="number">0x6000002563b0</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br><span class="line">-initWithArray:copyItems: -&gt; <span class="number">0x60c00024a800</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br></pre></td></tr></table></figure><p>对<strong>可变集合对象</strong>进行 <code>copy</code> 与 <code>mutableCopy</code>:</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">NSMutableArray</span> *mArray = [[<span class="built_in">NSMutableArray</span> alloc] initWithArray:@[<span class="string">@"1"</span>, <span class="string">@"2"</span>, <span class="string">@"3"</span>]];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mArray -&gt; %p, %p, %p"</span>, mArray, mArray[<span class="number">0</span>], mArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *copyMutableArray = [mArray <span class="keyword">copy</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"copyMutableArray -&gt; %p, %p, %p"</span>, copyMutableArray, copyMutableArray[<span class="number">0</span>], copyMutableArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableArray</span> *mutableCopyMutableArray = [mArray mutableCopy];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"mutableCopyMutableArray -&gt; %p, %p, %p"</span>, mutableCopyMutableArray, mutableCopyMutableArray[<span class="number">0</span>], mutableCopyMutableArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSMutableArray</span> *methodMutableArray = [<span class="built_in">NSMutableArray</span> arrayWithArray:mArray];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"-arrayWithArray: -&gt; %p, %p, %p"</span>, methodMutableArray, methodMutableArray[<span class="number">0</span>], methodMutableArray[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line"><span class="built_in">NSArray</span> *copyItemsMutableArray = [[<span class="built_in">NSMutableArray</span> alloc] initWithArray:mArray copyItems:<span class="literal">YES</span>];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"-initWithArray:copyItems: -&gt; %p, %p, %p"</span>, copyItemsMutableArray, copyItemsMutableArray[<span class="number">0</span>], copyItemsMutableArray[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>打印： </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mArray -&gt; <span class="number">0x60c00024a6b0</span>, <span class="number">0x10e5ad370</span>, <span class="number">0x10e5ad390</span></span><br><span class="line">copyMutableArray -&gt; <span class="number">0x604000444b90</span>, <span class="number">0x10e5ad370</span>, <span class="number">0x10e5ad390</span></span><br><span class="line">mutableCopyMutableArray -&gt; <span class="number">0x604000444e30</span>, <span class="number">0x10e5ad370</span>, <span class="number">0x10e5ad390</span></span><br><span class="line">-arrayWithArray: -&gt; <span class="number">0x60c00024a980</span>, <span class="number">0x10e5ad370</span>, <span class="number">0x10e5ad390</span></span><br><span class="line">-initWithArray:copyItems: -&gt; <span class="number">0x600000255b10</span>, <span class="number">0x10e5ad370</span>, <span class="number">0x10e5ad390</span></span><br></pre></td></tr></table></figure><p>由此可见：</p><table><thead><tr><th></th><th>不可变集合对象</th><th>可变集合对象</th></tr></thead><tbody><tr><td>copy</td><td>无操作</td><td>单层深拷贝</td></tr><tr><td>mutableCopy</td><td>单层深拷贝</td><td>单层深拷贝</td></tr><tr><td>-arrayWithArray:</td><td>单层深拷贝</td><td>单层深拷贝</td></tr><tr><td>-initWithArray:copyItems:</td><td>单层深拷贝</td><td>单层深拷贝</td></tr></tbody></table><ul><li>不可变集合对象 <code>copy</code>: 不做任何拷贝操作，新建指针的值依旧是同一个指针的值</li><li>其余可变、不可变集合对象的操作都是单层深拷贝</li></ul><blockquote><p>单层深拷贝：只是新建了数组对象的地址，而数组内各元素的地址依旧指向同一个对象</p></blockquote><h1 id="真正的深拷贝"><a href="#真正的深拷贝" class="headerlink" title="真正的深拷贝"></a>真正的深拷贝</h1><p>如果想进行完全的深拷贝，可以先通过 NSKeyedArchiver 将对象归档，再通过 NSKeyedUnarchiver 将对象解归档。由于在归档时，对象中每个成员变量都会收到 <code>encodeWithCoder:</code> 消息，相当于将对象所有的数据均序列化保存到磁盘上（可以看成换了种数据格式的拷贝），再通过 <code>initWithCoder:</code> 解归档时，就将拷贝过的数据经过转换后读取出来，这样就实现了深拷贝。</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="built_in">NSKeyedArchiver</span> archiveRootObject:array toFile:filePath];</span><br><span class="line"><span class="built_in">NSArray</span> *unarchiverArray = [<span class="built_in">NSKeyedUnarchiver</span> unarchiveObjectWithFile:filePath];</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"array -&gt; %p, %p, %p"</span>, array, array[<span class="number">0</span>], array[<span class="number">1</span>]);</span><br><span class="line"><span class="built_in">NSLog</span>(<span class="string">@"unarchiverArray -&gt; %p, %p, %p"</span>, unarchiverArray, unarchiverArray[<span class="number">0</span>], unarchiverArray[<span class="number">1</span>]);</span><br></pre></td></tr></table></figure><p>打印：</p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array -&gt; <span class="number">0x6080002436f0</span>, <span class="number">0x10e5ad250</span>, <span class="number">0x10e5ad270</span></span><br><span class="line">unarchiverArray -&gt; <span class="number">0x6000002563e0</span>, <span class="number">0xa000000000000611</span>, <span class="number">0xa000000000000621</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;title: 浅拷贝与深拷贝&lt;br&gt;date: 2018-07-28 10:04:56&lt;br&gt;tags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Objective-C&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;p&gt;本文内容基本都是通用的知识点，这里只是作为个人知识点的一个整理归纳，所
      
    
    </summary>
    
    
  </entry>
  
</feed>
